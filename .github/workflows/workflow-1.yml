name: CI/CD Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get commit hash
        id: commit_hash
        run: echo "::set-output name=COMMIT_HASH::$(git rev-parse --short HEAD)"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Image to Docker Hub
        env:
          COMMIT_HASH: ${{ steps.commit_hash.outputs.COMMIT_HASH }}

        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{vars.IMAGE_NAME}}:$COMMIT_HASH .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{vars.IMAGE_NAME}}:$COMMIT_HASH

          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{vars.IMAGE_NAME}}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{vars.IMAGE_NAME}}:latest

  deploy-on-EC2-instance:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy on EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{vars.IMAGE_NAME}}:latest
            sudo docker stop NodeJs-Container
            sudo docker rm NodeJs-Container
            sudo docker run -d  --name NodeJs-Container -p 3001:3000 ${{ secrets.DOCKER_USERNAME }}/${{vars.IMAGE_NAME}}:latest
